#!/bin/bash
# This is a simple script and will be executed on your CI system if
# available.  Otherwise it will execute while your application is stopped
# before the build step.  This script gets executed directly, so it
# could be python, php, ruby, etc.

# make room
rm -rf "$OPENSHIFT_TMP_DIR"/*

#  Source utility functions.
source "$OPENSHIFT_REPO_DIR/.openshift/lib/utils"

#  Ensure custom node version if not installed.
echo ""
ensure_node_is_installed


#  We need to move the package.json file out of the way in pre_build, so
#  that the OpenShift git post-receive hook doesn't try and use the old
#  npm version to install the dependencies.
mv  "${OPENSHIFT_REPO_DIR}/package.json"  "$(get_node_tmp_dir)"

# Install CMake
if [ -f "${OPENSHIFT_DATA_DIR}/bin/cmake" ]; 
then 
  echo "cmake already installed"
else
  cd $OPENSHIFT_TMP_DIR
  wget http://www.cmake.org/files/v2.8/cmake-2.8.10.2.tar.gz
  tar xvf cmake-2.8.10.2.tar.gz
  cd cmake-2.8.10.2
  ./configure --prefix=$OPENSHIFT_DATA_DIR
  gmake
  gmake install
  cd $OPENSHIFT_TMP_DIR
  rm -rf cmake*
fi
#add cmake to path through the .bash_profile

dot_bash_profile=$OPENSHIFT_DATA_DIR/.bash_profile
pattern='\s*source(.*)\.openshift/lib/add_local_bin_to_path\s*(.*)\s*'
if ! egrep "$pattern" $dot_bash_profile > /dev/null 2>&1 ; then

   cat >> $dot_bash_profile  <<SRCEOF

#  Setup shell env for cmake
source "\$OPENSHIFT_REPO_DIR/.openshift/lib/add_local_bin_to_path"
SRCEOF

   echo "  - Added source add_local_bin_to_path to .bash_profile"
fi

# Install PNG LIB

if [ -f "${OPENSHIFT_DATA_DIR}include/png.h" ]; 
then 
  echo "libpng already installed"
else
  cd $OPENSHIFT_TMP_DIR
  wget http://prdownloads.sourceforge.net/libpng/libpng-1.5.4.tar.gz?download
  tar xzf libpng-1.5.4.tar.gz
  cd libpng-1.5.4
  ./configure --prefix=${OPENSHIFT_DATA_DIR}
  make
  make install
  cd $OPENSHIFT_TMP_DIR
  rm -rf libpng*
fi

# Install ZLIB 
if [ -f "${OPENSHIFT_DATA_DIR}lib/libz.so" ]; 
then 
  echo "lib zlib already installed"
else
  cd $OPENSHIFT_TMP_DIR
  wget http://zlib.net/zlib-1.2.8.tar.gz
  gzip -dc < zlib-1.2.8.tar.gz | tar -xf -
  cd zlib-1.2.8
  ./configure -s --prefix=${OPENSHIFT_DATA_DIR}
  make
  make install 
  cd $OPENSHIFT_TMP_DIR
  rm -rf zlib*
fi

# Install libxml2 
if [ -f "${OPENSHIFT_DATA_DIR}lib/xmlxml.so" ]; 
then 
  echo "lib libxml2 already installed"
else
  cd $OPENSHIFT_TMP_DIR
  wget ftp://xmlsoft.org/libxml2/libxml2-2.7.3.tar.gz
  gzip -dc < libxml2-2.7.3.tar.gz | tar -xf -
  cd libxml2-2.7.3
  ./configure --prefix=${OPENSHIFT_DATA_DIR}
  make
  make install 
  cd $OPENSHIFT_TMP_DIR
  rm -rf libxml*
fi

# Install PCRE 
if [ -f "${OPENSHIFT_DATA_DIR}lib/pcrepce.so" ]; 
then 
  echo "lib PCRE already installed"
else
  cd $OPENSHIFT_TMP_DIR
  wget http://files.directadmin.com/services/custombuild/pcre-8.02.tar.gz
  tar xvzf pcre-8.02.tar.gz
  cd pcre-8.02
  ./configure --enable-utf8 --enable-unicode-properties --prefix=${OPENSHIFT_DATA_DIR}
  #make CPPFLAGS=-I/usr/kerberos/include
  make
  make install
  cd $OPENSHIFT_TMP_DIR
  rm -rf pcre*
fi


echo "EXPORT path for cmake"
source "$OPENSHIFT_REPO_DIR/.openshift/lib/add_local_bin_to_path"
echo ${PATH}

